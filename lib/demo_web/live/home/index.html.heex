<div class="max-w-4xl mx-auto p-6">
  <h1 class="text-3xl font-bold mb-6">Horoscopes with Journey</h1>

  <AboutSection.render values={@values} execution_id={@execution_id} />

  <div
    :if={Map.get(@values, :dev_show_more, false)}
    class="flex items-center bg-blue-50 p-4 rounded-lg"
  >
    <form
      id="form-dev-show-execution-history-id"
      phx-value-toggle_field_name="dev_show_execution_history"
      phx-change="dev_toggle"
    >
      <input
        type="checkbox"
        name="dev_toggle"
        id="dev_show_execution_history-id"
        checked={Map.get(@values, :dev_show_execution_history, false) == true}
        disabled={!@connected?}
        class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded disabled:bg-gray-100"
      />
      <label for="dev_show_execution_history-id" class="ml-2 inline-block text-sm text-gray-700">
        <Gear.render /> See Execution History
      </label>
    </form>
  </div>

  <div class="space-y-6">
    <div class={"grid gap-6 " <> if(@connected? and Map.get(@values, :dev_show_execution_history, false), do: "grid-cols-2", else: "grid-cols-1")}>
      <div id="section-your-inputs-id" class="bg-white p-6 rounded-lg shadow">
        <h2 class="text-xl font-semibold mb-4">Your Inputs</h2>
        <div class="space-y-4">
          <div>
            <label class={Classes.label()}>name</label>
            <input
              id="input-name-id"
              type="text"
              value={Map.get(@values, :name, "")}
              phx-blur="update_value"
              phx-value-field="name"
              disabled={!@connected?}
              class={Classes.editable_value()}
            />
          </div>

          <div>
            <label class={Classes.label()}>birth_month</label>
            <form id="form-birth-month-id" phx-change="update_select">
              <input type="hidden" name="field" value="birth_month" />
              <select
                id="input-birth-month-id"
                name="birth_month"
                disabled={!@connected?}
                class={Classes.editable_value()}
              >
                <option value="" selected={Map.get(@values, :birth_month, "") == ""}>
                  Select month...
                </option>
                <option
                  value="January"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "january"}
                >
                  January
                </option>
                <option
                  value="February"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "february"}
                >
                  February
                </option>
                <option
                  value="March"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "march"}
                >
                  March
                </option>
                <option
                  value="April"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "april"}
                >
                  April
                </option>
                <option
                  value="May"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "may"}
                >
                  May
                </option>
                <option
                  value="June"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "june"}
                >
                  June
                </option>
                <option
                  value="July"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "july"}
                >
                  July
                </option>
                <option
                  value="August"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "august"}
                >
                  August
                </option>
                <option
                  value="September"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "september"}
                >
                  September
                </option>
                <option
                  value="October"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "october"}
                >
                  October
                </option>
                <option
                  value="November"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "november"}
                >
                  November
                </option>
                <option
                  value="December"
                  selected={String.downcase(Map.get(@values, :birth_month, "")) == "december"}
                >
                  December
                </option>
              </select>
            </form>
          </div>

          <div>
            <label class={Classes.label()}>birth_day</label>
            <input
              id="input-birth-day-id"
              type="number"
              value={Map.get(@values, :birth_day, "")}
              phx-blur="update_value"
              phx-value-field="birth_day"
              disabled={!@connected?}
              min="1"
              max="31"
              class={Classes.editable_value()}
            />
          </div>

          <div>
            <label class={Classes.label()}>pet_preference</label>
            <form id="form-pet-preference-id" phx-change="update_select">
              <input type="hidden" name="field" value="pet_preference" />
              <select
                id="input-pet-preference-id"
                name="pet_preference"
                disabled={!@connected?}
                class={Classes.editable_value()}
              >
                <option value="" selected={Map.get(@values, :pet_preference, "") == ""}>
                  Select...
                </option>
                <option value="cats" selected={Map.get(@values, :pet_preference) == "cats"}>
                  Cats
                </option>
                <option value="dogs" selected={Map.get(@values, :pet_preference) == "dogs"}>
                  Dogs
                </option>
                <option value="both" selected={Map.get(@values, :pet_preference) == "both"}>
                  Both
                </option>
                <option value="neither" selected={Map.get(@values, :pet_preference) == "neither"}>
                  Neither
                </option>
              </select>
            </form>
          </div>

          <div>
            <label class={Classes.label()}>email_address</label>
            <input
              id="input-email-address-id"
              type="email"
              value={Map.get(@values, :email_address, "")}
              disabled={true}
              phx-blur="update_value"
              phx-value-field="email_address"
              class={Classes.editable_value() <> " text-gray-500"}
            />
          </div>

          <div class="flex items-center ">
            <form
              id="form-subscribe-weekly-id"
              phx-value-toggle_field_name="subscribe_weekly"
              phx-change="dev_toggle"
            >
              <input
                type="checkbox"
                name="dev_toggle"
                id="subscribe_weekly-id"
                checked={Map.get(@values, :subscribe_weekly, false) == true}
                disabled={!@connected?}
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded disabled:bg-gray-100"
              />
              <label for="subscribe_weekly-id" class="ml-2 inline-block text-sm text-gray-700">
                subscribe_weekly
              </label>
            </form>
          </div>
        </div>
      </div>

      <div
        :if={@connected? and Map.get(@values, :dev_show_execution_history, false)}
        id="section-execution-history-id"
        class="p-6 rounded-lg shadow bg-blue-50 flex flex-col"
      >
        <h2 class="text-xl font-semibold mb-4">Execution History</h2>
        <div class="text-sm text-gray-500 mb-4 font-mono">
          Execution ID: {if @execution_id, do: @execution_id, else: "nil"}
        </div>

        <div class="space-y-2 p-4 text-sm bg-gray-50 border-2 border-gray-300 rounded-lg max-h-96 overflow-y-auto font-mono">
          <%= for {revision, message} <- @execution_history do %>
            <div class="odd:bg-gray-200 p-1 rounded-lg flex items-start space-x-2 ">
              <span class="text-gray-500 font-mono">{revision}. {message}</span>
            </div>
          <% end %>
          <%= if @execution_history == [] do %>
            <div class=" text-gray-500">No execution history yet</div>
          <% end %>
        </div>
      </div>
    </div>

    <div :if={@connected?} id="section-computed-results-id" class="bg-white p-6 rounded-lg shadow">
      <h2 class="text-xl font-semibold mb-4">Your Computed Results</h2>

      <div
        :if={Map.get(@values, :dev_show_more, false)}
        class="my-4 flex items-center bg-blue-50 p-4 rounded-lg"
      >
        <form
          id="form-dev-show-computation-states-id"
          phx-value-toggle_field_name="dev_show_computation_states"
          phx-change="dev_toggle"
        >
          <input
            type="checkbox"
            name="dev_toggle"
            id="dev_show_computation_states-id"
            checked={Map.get(@values, :dev_show_computation_states, false) == true}
            disabled={!@connected?}
            class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded disabled:bg-gray-100"
          />
          <label
            for="dev_show_computation_states-id"
            class="ml-2 inline-block text-sm text-gray-700"
          >
            <Gear.render /> See Upstream Dependencies for Each Computation
          </label>
        </form>
      </div>

      <div class="space-y-4">
        <div>
          <div>
            <label class={Classes.label()}>name_validation</label>
            <div
              id="output-name-validation-id"
              class={
              Classes.read_only_value(Map.has_key?(@values, :name_validation)) <> 
              if(Map.get(@values, :name_validation, "") == "no horoscope for Bowser!", do: " text-red-500 border-red-500", else: "")
            }
            >
              {Map.get(@values, :name_validation, "not set")}
            </div>
            <ComputationState.render
              :if={
                Map.get(@values, :dev_show_computation_states, false) and
                  Map.get(@values, :dev_show_more, false)
              }
              execution_id={@execution_id}
              node_name={:name_validation}
              computation_states={@computation_states}
            />
          </div>
          <label class={Classes.label()}>zodiac_sign</label>
          <div
            id="output-zodiac-sign-id"
            class={Classes.read_only_value(Map.has_key?(@values, :zodiac_sign))}
          >
            {Map.get(@values, :zodiac_sign, "not set")}
          </div>
          <ComputationState.render
            :if={
              Map.get(@values, :dev_show_computation_states, false) and
                Map.get(@values, :dev_show_more, false)
            }
            execution_id={@execution_id}
            node_name={:zodiac_sign}
            computation_states={@computation_states}
          />
        </div>

        <div>
          <label class={Classes.label()}>horoscope</label>
          <div
            id="output-horoscope-id"
            class={Classes.read_only_value(Map.has_key?(@values, :horoscope))}
          >
            {Map.get(@values, :horoscope, "not set")}
          </div>
          <ComputationState.render
            :if={
              Map.get(@values, :dev_show_computation_states, false) and
                Map.get(@values, :dev_show_more, false)
            }
            execution_id={@execution_id}
            node_name={:horoscope}
            computation_states={@computation_states}
          />
        </div>

        <div>
          <label class={Classes.label()}>email_horoscope</label>
          <div
            id="output-email-horoscope-id"
            class={Classes.read_only_value(Map.has_key?(@values, :email_horoscope))}
          >
            {Map.get(@values, :email_horoscope, "not set")}
          </div>
          <ComputationState.render
            :if={
              Map.get(@values, :dev_show_computation_states, false) and
                Map.get(@values, :dev_show_more, false)
            }
            execution_id={@execution_id}
            node_name={:email_horoscope}
            computation_states={@computation_states}
          />
        </div>
      </div>
    </div>

    <DevShowOtherComputedValues.render
      :if={Map.get(@values, :dev_show_more, false)}
      values={@values}
      connected?={@connected?}
      execution_id={@execution_id}
      computation_states={@computation_states}
    />

    <div :if={@connected? and Map.get(@values, :dev_show_more, false)}>
      <DevShowAllValues.render
        values={@values}
        connected?={@connected?}
        execution_id={@execution_id}
        all_values={@all_values}
      />

      <DevShowJourneyExecutionSummary.render
        values={@values}
        connected?={@connected?}
        execution_id={@execution_id}
        execution_summary={@execution_summary}
      />

      <DevShowFlowAnalyticsTable.render
        values={@values}
        connected?={@connected?}
        flow_analytics={@flow_analytics}
        flow_analytics_text={@flow_analytics_text}
      />

      <FlowAnalyticsJson.render
        values={@values}
        connected?={@connected?}
        flow_analytics={@flow_analytics}
      />

      <DevShowWorkflowGraph.render
        values={@values}
        connected?={@connected?}
        graph_mermaid={@graph_mermaid}
      />
    </div>
  </div>
</div>
